INCLUDE "hardware.inc"

RSSET _RAM

;Sprite OAM table
SPR_TBL RB 0
REPT 40
SPR\@_Y	RB 1 ;RGBDS, my OCD thanks you for not allowing a \t here
SPR\@_X	RB 1
SPR\@_TILE	RB 1
SPR\@_FLAGS	RB 1
ENDR
END_SPR_TBL RB 0

;Ram variables
RAM_START RB 0

RAM_END RB 0

;HRAM
RSSET _HRAM

;OAM DMA routine
update_oam RB 11

;HRam variables
HRAM_START RB 0
VBFLAG RB 1
RNG RB 1
HRAM_END RB 0


SECTION	"Vblank",ROM0[$0040]
	push af
	ld a, $1
	ldh [VBFLAG], a
	jp update_oam
SECTION	"LCDC",ROM0[$0048]
	reti
SECTION	"Timer_Overflow",ROM0[$0050]
	reti
SECTION	"Serial",ROM0[$0058]
	reti
SECTION	"Input",ROM0[$0060]
	reti
	
SECTION "DMARout", ROM0
dma_src:
	ld a, $C0
	ld [rDMA], a
	ld a, $28
.wait
	dec a
	jr nz, .wait
	pop af
	reti
	
SECTION	"start",ROM0[$0100]
    jr	begin
	DB $BE, $EF
	
	ROM_HEADER	"VIRUS! GB vers ", CART_ROM, CART_ROM_256K, CART_RAM_NONE
	
begin:
	di ;Disable interrupts
	ld sp, $E000 ;Set the stack to the end of the RAM
	xor a
	ld [rNR52], a ;Shut down shound system
	
	ld bc, $11
	ld hl, dma_src
	ld de, update_oam
	call mem_Copy
	
	;Clear oamtable
	;Clear ram
	;Clear hram
	call StopLCD
	;Crear mapvram
	;Set vram
	;Set oam
	;Game inits
	
	ei
loop:
	halt
	ld a, [VBFLAG]
	or a
	jp z, loop
	;Update VRAM
	;Game logic
	jr	loop

;Routines
mem_Clear:
	ld a, e                                   
	or d                                      
	jr z, .end                         

	xor a                                     
	ld [hl+], a                               
	dec de                                    
	jr mem_Clear                            

.end:
	ret  
	
mem_Copy:
	ld a, c                                   
	or b                                      
	jr z, .end                         

	ld a, [hl+]                               
	ld [de], a                                
	inc de                                    
	dec bc                                    
	jr mem_Copy                            

.end:
	ret 

StopLCD:
        ld      a,[rLCDC]
        rlca
        ret     nc
		
.wait:
        ld      a,[rLY]
        cp      145
        jr      c, .wait

        ld      a,[rLCDC]
        res     7,a
        ld      [rLCDC],a

        ret
		
SECTION	"pad",ROMX
	nop
